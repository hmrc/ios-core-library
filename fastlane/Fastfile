fastlane_require 'semantic'

default_platform(:ios)

platform :ios do

  desc "Create a new tagged release of the library."
  desc "This will bump the Info.plist version, precompile the library, commit and tag the changes, then push up to master."
  lane :take_release do

    # ensure repo is clean and on main
    ensure_git_status_clean
    # ensure_git_branch
    ensure_git_branch(
      branch: 'main'
    )
    # pull latest changes and fetch tags
    sh("git fetch origin '+refs/tags/*:refs/tags/*'")
    git_pull

    # get current version
    current_tag = last_git_tag
    version = Semantic::Version.new(current_tag)

    # prompt for bump type
    bump_type = UI.select(
      "Current version is #{current_tag}. What would you like to bump?",
      ["major", "minor", "patch"]
    )

    # increment version
    case bump_type
    when "major"
      tag = version.increment!(:major)
    when "minor"
      tag = version.increment!(:minor)
    else
      tag = version.increment!(:patch)
    end

    increment_version_number(
      version_number: tag.to_string
    )

    # update changelog
    stamp_changelog(
      section_identifier: tag.to_string
    )

    # protected main, create release bump version
    sh("git checkout -b release/#{tag.to_string}")
    
    # commit changes
    git_commit(
      path: [
        "./CHANGELOG.md",
        "ios-core-library.xcodeproj/ios_core_library_Info.plist", 
        "ios-core-library.xcodeproj/ios_core_libraryTests_Info.plist"
            ],
      message: "Bump version to #{tag} and tagging release"
    )
    # take tag and push to remote
    add_git_tag(tag: tag.to_string)
    push_to_git_remote(setupstream: true)
    push_git_tags
    pr_url = create_pull_request(
      repo: "hmrc/ios-core-library",
      title: "Version bump #{tag.to_string}",
      body: "tag taken #{tag.to_string}, PR for Version bump",
      base: "main"
    )
    # Open the pull request URL in the default web browser
    sh("open #{pr_url}")
  end
end
